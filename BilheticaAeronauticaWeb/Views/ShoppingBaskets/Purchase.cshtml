@model BilheticaAeronauticaWeb.Models.ShoppingBasketWithUserViewModel

@{
    ViewData["Title"] = "Purchase";
}

<br />
<h1>Your Final Order</h1>
<br />
<form asp-controller="Orders" asp-action="Purchase" method="post">
    <div asp-validation-summary="ModelOnly"></div>

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Class</th>
                <th>Passenger type</th>
                <th>Origin</th>
                <th>Destination</th>
                <th>Layover</th>
                <th>Price</th>
                <th>Seat</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.ShoppingBasketTickets.Count; i++)
            {
                var item = Model.ShoppingBasketTickets[i];
                <tr>
                    <td>
                        <input type="hidden" asp-for="ShoppingBasketTickets[@i].Name" />
                        @item.Name
                    </td>
                    <td>
                        <input type="hidden" asp-for="ShoppingBasketTickets[@i].Surname" />
                        @item.Surname
                    </td>
                    <td>
                        <input type="hidden" asp-for="ShoppingBasketTickets[@i].Class" />
                        @item.Class
                    </td>
                    <td>
                        <input type="hidden" asp-for="ShoppingBasketTickets[@i].PassengerType" />
                        @item.PassengerType
                    </td>
                    <td>
                        <input type="hidden" asp-for="ShoppingBasketTickets[@i].Flight.OriginAirport.Name" />
                        @item.Flight.OriginAirport.Name
                    </td>
                    <td>
                        <input type="hidden" asp-for="ShoppingBasketTickets[@i].Flight.DestinationAirport.Name" />
                        @item.Flight.DestinationAirport.Name
                    </td>
                    <td>
                        @if (item.Flight.Layover != null)
                        {
                            <input type="hidden" asp-for="ShoppingBasketTickets[@i].Flight.Layover.Name" />
                            @item.Flight.Layover.Name
                        }
                        else
                        {
                            <p>N/A</p>
                        }

                    </td>

                        <input type="hidden" asp-for="ShoppingBasketTickets[@i].FlightId" />

                    <td>
                        <input type="hidden" asp-for="ShoppingBasketTickets[@i].Price" />
                        @item.Price.ToString("C")
                    </td>
                    <td>
                        @if (item.SeatId == null || item.SeatId == 0)
                        {
                            <span class="text-danger">Please choose a seat</span>
                            <select asp-for="ShoppingBasketTickets[@i].SeatId"
                                    class="form-control seat-dropdown"
                                    data-index="@i">
                                <option value="">Select a seat</option>
                                @{
                                    var seatsList = ViewBag.Seats as IEnumerable<SelectListItem>;
                                }
                                @foreach (var seat in seatsList)
                                {
                                    <option value="@seat.Value">@seat.Text</option>
                                }
                            </select>
                        }
                        else
                        {
                            @item.SeatId
                            <input type="hidden" asp-for="ShoppingBasketTickets[@i].SeatId" />
                        }
                    </td>
                </tr>
            }

        </tbody>
    </table>
    <br />
    @if (!User.Identity.IsAuthenticated)
    {
        <div class="form-group">
            <label asp-for="NewUser.FirstName">First Name</label>
            <input asp-for="NewUser.FirstName" class="form-control" />
            <span asp-validation-for="NewUser.FirstName" class="text-warning"></span>
        </div>

        <div class="form-group">
            <label asp-for="NewUser.LastName">Last Name</label>
            <input asp-for="NewUser.LastName" class="form-control" />
            <span asp-validation-for="NewUser.LastName" class="text-warning"></span>
        </div>

        <div class="form-group">
            <label asp-for="NewUser.Username">Username</label>
            <input asp-for="NewUser.Username" class="form-control" />
            <span asp-validation-for="NewUser.Username" class="text-warning"></span>
        </div>

        <div class="form-group">
            <label asp-for="NewUser.Password">Password</label>
            <input asp-for="NewUser.Password" type="password" class="form-control" />
            <span asp-validation-for="NewUser.Password" class="text-warning"></span>
        </div>

        <div class="form-group">
            <label asp-for="NewUser.Confirm">Confirm Password</label>
            <input asp-for="NewUser.Confirm" type="password" class="form-control" />
            <span asp-validation-for="NewUser.Confirm" class="text-warning"></span>
        </div>
    }

    <div class="text-center mt-3">
        <button type="submit" class="btn btn-success">Confirm</button>
    </div>
</form>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const seatDropdowns = document.querySelectorAll('.seat-dropdown');
            const allSeatOptions = {};

            // Save the original options
            seatDropdowns.forEach(dropdown => {
                const index = dropdown.dataset.index;
                allSeatOptions[index] = Array.from(dropdown.options).map(option => option.cloneNode(true));
            });

            seatDropdowns.forEach(dropdown => {
                dropdown.addEventListener('change', function () {
                    const selectedSeat = this.value;

                    // Rebuild all dropdowns
                    seatDropdowns.forEach(innerDropdown => {
                        const innerIndex = innerDropdown.dataset.index;

                        const currentValue = innerDropdown.value;

                        // Clear all options
                        innerDropdown.innerHTML = '';

                        // Restore from original list
                        allSeatOptions[innerIndex].forEach(option => {
                            if (
                                option.value === '' ||                    // keep placeholder
                                option.value === currentValue ||          // keep its own selection
                                option.value !== selectedSeat             // exclude seat selected by someone else
                            ) {
                                innerDropdown.appendChild(option.cloneNode(true));
                            }
                        });

                        // Re-apply the user's selection
                        innerDropdown.value = currentValue;
                    });
                });
            });
        });
    </script>
}
