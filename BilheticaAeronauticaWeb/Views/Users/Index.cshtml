@model IEnumerable<BilheticaAeronauticaWeb.Entities.User>

@{
    ViewData["Title"] = "Users";
}

<h2>Users</h2>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New User</a>
</p>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
@*             <th>@Html.DisplayNameFor(model => model.First().Id)</th> *@
            <th>@Html.DisplayNameFor(model => model.First().UserName)</th>
            <th>@Html.DisplayNameFor(model => model.First().Email)</th>
            <th>Roles</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var user in Model)
            {
                <tr>
@*                     <td>@user.Id</td> *@
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>
                        @* Assuming you have Roles as a property or you fetch them via ViewData/ViewBag *@
                        @{
                            var roles = ViewBag.UserRoles != null && ViewBag.UserRoles.ContainsKey(user.Id)
                            ? string.Join(", ", ViewBag.UserRoles[user.Id])
                            : "No roles";
                        }
                        @roles
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-info btn-sm">Details</a>
                        <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-warning btn-sm">Edit</a>
                        <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No users found.</td>
            </tr>
        }
    </tbody>
</table>
